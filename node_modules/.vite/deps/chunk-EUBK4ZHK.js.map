{
  "version": 3,
  "sources": ["../../@restart/hooks/esm/useForceUpdate.js", "../../@restart/ui/esm/NavContext.js"],
  "sourcesContent": ["import { useReducer } from 'react';\r\n\r\n/**\r\n * Returns a function that triggers a component update. the hook equivalent to\r\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\r\n * is preferable but may be required in some advanced usages of refs for interop or\r\n * when direct DOM manipulation is required.\r\n *\r\n * ```ts\r\n * const forceUpdate = useForceUpdate();\r\n *\r\n * const updateOnClick = useCallback(() => {\r\n *  forceUpdate()\r\n * }, [forceUpdate])\r\n *\r\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\r\n * ```\r\n */\r\nexport default function useForceUpdate() {\r\n  // The toggling state value is designed to defeat React optimizations for skipping\r\n  // updates when they are strictly equal to the last state value\r\n  const [, dispatch] = useReducer(state => !state, false);\r\n  return dispatch;\r\n}", "import * as React from 'react';\r\nconst NavContext = /*#__PURE__*/React.createContext(null);\r\nNavContext.displayName = 'NavContext';\r\nexport default NavContext;"],
  "mappings": ";;;;;;;;AAAA,mBAA2B;AAkBZ,SAAR,iBAAkC;AAGvC,QAAM,CAAC,EAAE,QAAQ,QAAI,yBAAW,WAAS,CAAC,OAAO,KAAK;AACtD,SAAO;AACT;;;ACvBA,YAAuB;AACvB,IAAM,aAAgC,oBAAc,IAAI;AACxD,WAAW,cAAc;AACzB,IAAO,qBAAQ;",
  "names": []
}
